База ``Расписание''
-------------------
Модель данных.
Отдельная запись по расписанию содержит следующую информацию
время (день, пара)
аудитория
предмет
преподаватель
группа (поток для лекций)
Формат представления каждого поля можно определить по своему усмотрению.

Требуется обеспечить следующие операции с этой базой:
--- загрузка базы из текстового файла;
--- сохранение базы в текстовом файле;
--- добавление нового пункта в расписание
(с проверкой возможных накладок);
--- удаление пункта из расписания;
--- получение частных расписаний (выборок)
по отдельной группе, преподавателю, предмету в рамках
набора групп (потока), аудитории (когда свободна,
когда и чем занята), получение списка аудиторий,
свободных в указанное время и т.п.
Для формулировки запросов следует использовать специальный язык, в котором задаются
действия и критерии выборки. Например, запрос
select teacher=Иванов group=100-499 subject=Analysis end
print teacher group date_time room sort group end
составит расписание Иванова на 1--4 курсах по анализу и напечатает его в виде списка
с указанными полями и отсортированного по номерам групп.
Операциями запроса могут быть
select <критерии> end --- произвести выборку по указанным критериям
reselect <критерии> end --- произвести выборку из уже выбранных записей
print <список полей> [sort <поле>] end --- вывести результат выборки
insert <список значений> end --- добавить новую запись
remove <список значений> end --- удалить запись
и т.п.


Задание критериев выборки может иметь вид конкретного значения, диапазона и (дополнительно)
перечисления значений или диапазонов. Например
select name=Ив* group=201-203 rating=3-* end
print name rating info sort name end
--- выбрать всех студентов с фамилиями на "Ив" из 201, 202 и 203 групп с рейтингом большим
или равным 3, из полученной выборки напечатать имена, рейтинг и дополнительную информацию,
выдачу отсортировать по именам.


Интерфейс базы должен содержать функции, получающие запрос в виде текстовой строки и
возвращающие результат также в виде текстового массива. Во второй части задания эти функции
составят основу сетевого взаимодействия клиента и сервера.
Варианты заданий различаются способом внутреннего представления.


В базе хранятся:
единый динамический массив всех записей
(преподаватель, группа, время, ауд., предмет),
список индексов по преподавателям (т.е. для каждого преподавателя --
список индексов тех записей, где он встречается),
список индексов по группам,
список индексов по аудиториям,
список индексов по временам,
список индексов по предметам.
Выборка сводится в объединению/пересечению числовых множеств индексов.

